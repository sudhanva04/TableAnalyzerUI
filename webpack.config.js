const webpack = require('webpack');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const port = 3000;

module.exports = {
    // Webpack configuration goes here
    mode: 'development', //Webpack this configuration will be for either development or production.
    entry: './src/index.js', //Specifies the entry point of your application; this is where your React app lives and where the bundling process will begin
    output: { // Tells Webpack how to write the compiled files to disk
        filename: 'bundle.[hash].js' //The [hash] portion of the filename will be replaced by a hash generated by Webpack every time your application changes and is recompiled
    },
    devtool: 'inline-source-map', //create source maps to help you with debugging of your application
    module: {
        rules: [

            // First Rule
            {
                test: /\.(js)$/,
                exclude: /node_modules/,
                use: ['babel-loader']
            },

            // Second Rule
            {
                test: /\.css$/,
                use: [
                    {
                        loader: 'style-loader'
                    },
                    {
                        loader: 'css-loader',
                        options: {
                            modules: true,
                            localsConvention: 'camelCase',
                            sourceMap: true
                        }
                    }
                ]
            }
        ]
    },
    plugins: [ //html-webpack-plugin accepts an object with different options. In our case we specify the HTML template we will be using and the favicon
        new HtmlWebpackPlugin({
            template: 'public/index.html',
            //favicon: 'public/favicon.ico'
        })
    ],
    devServer: {
        host: 'localhost',
        port: port,
        historyApiFallback: true,
        open: true
    }
};